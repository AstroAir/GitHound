{
  "name": "githound-frontend",
  "version": "1.0.0",
  "description": "GitHound frontend components and utilities",
  "type": "module",
  "main": "main.js",
  "scripts": {
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "lint": "eslint . --ext .js",
    "lint:fix": "eslint . --ext .js --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "quality": "npm run lint && npm run format:check",
    "quality:fix": "npm run lint:fix && npm run format",
    "dev": "echo 'Frontend development server - files served by FastAPI'",
    "build": "echo 'No build step required - using ES6 modules'",
    "clean": "rm -rf node_modules coverage test-results",
    "validate": "npm run quality && npm run test",
    "prepare": "npm run quality:fix"
  },
  "keywords": [
    "githound",
    "frontend",
    "components",
    "es6-modules",
    "javascript"
  ],
  "author": "GitHound Team",
  "license": "MIT",
  "devDependencies": {
    "@babel/core": "^7.23.0",
    "@babel/preset-env": "^7.23.0",
    "babel-jest": "^29.7.0",
    "eslint": "^8.50.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-html-reporters": "^3.1.5",
    "prettier": "^3.0.0"
  },
  "jest": {
    "testEnvironment": "jsdom",
    "setupFilesAfterEnv": ["<rootDir>/tests/setup.js"],
    "collectCoverageFrom": [
      "components/**/*.js",
      "utils/**/*.js",
      "!**/node_modules/**",
      "!**/tests/**"
    ],
    "coverageDirectory": "tests/coverage",
    "coverageReporters": ["text", "html", "lcov"],
    "testMatch": [
      "<rootDir>/tests/**/*.test.js",
      "<rootDir>/tests/**/*.spec.js"
    ]
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": "current"
          }
        }
      ]
    ]
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "browserslist": [
    "defaults",
    "not IE 11",
    "not op_mini all"
  ]
}
