# Pre-commit configuration for GitHound
# Automated code quality checks before commits

repos:
  # Pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^tests/fixtures/
      - id: end-of-file-fixer
        exclude: ^tests/fixtures/
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: debug-statements
      - id: check-docstring-first
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.13
        args: [--line-length=100]

  # Import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=100]

  # Linting with Ruff
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        args: [--fix]
        exclude: ^tests/

  # Type checking with mypy (disabled due to complex type issues)
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.8.0
  #   hooks:
  #     - id: mypy
  #       additional_dependencies: [
  #         types-PyYAML,
  #         types-requests,
  #         pydantic,
  #         pandas-stubs,
  #         types-redis,
  #       ]
  #       args: [--ignore-missing-imports]
  #       exclude: ^(tests/|examples/|scripts/)

  # Security checks with bandit
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [--severity-level, medium, --exit-zero]  # Only report medium and high severity issues
        exclude: ^tests/
        additional_dependencies: [pbr]

  # Documentation checks (disabled - not critical)
  # - repo: https://github.com/pycqa/pydocstyle
  #   rev: 6.3.0
  #   hooks:
  #     - id: pydocstyle
  #       args: [--convention=google]
  #       exclude: ^(tests/|examples/|scripts/|githound/web/scripts/)

  # Markdown linting (disabled - not critical)
  # - repo: https://github.com/igorshubovych/markdownlint-cli
  #   rev: v0.38.0
  #   hooks:
  #     - id: markdownlint
  #       args: [--fix]
  #       exclude: ^(CHANGELOG.md|docs/gen_ref_pages.py)

  # Documentation validation (disabled - not critical)
  # - repo: local
  #   hooks:
  #     - id: validate-documentation
  #       name: Validate Documentation
  #       entry: python scripts/validate_documentation.py
  #       language: python
  #       additional_dependencies: [PyYAML, requests]
  #       files: \.(md|rst|txt)$
  #       args: [--skip-external]

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types: [yaml]
        exclude: ^(.pre-commit-config.yaml|mkdocs.yml)

  # Shell script linting (temporarily disabled due to network issues)
  # - repo: https://github.com/shellcheck-py/shellcheck-py
  #   rev: v0.9.0.6
  #   hooks:
  #     - id: shellcheck
  #       exclude: ^(.git/|build/|dist/)

# Configuration for specific hooks
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
