version: '3.8'

services:
  # GitHound Web API Service
  githound-web:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        GITHOUND_VERSION: "0.1.0"
        BUILD_DATE: "${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}"
        VCS_REF: "${VCS_REF:-$(git rev-parse --short HEAD)}"
    container_name: githound-web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - GITHOUND_DATA_DIR=/app/data
      - GITHOUND_LOG_DIR=/app/logs
      - GITHOUND_CACHE_DIR=/app/cache
      - REDIS_URL=redis://redis:6379/0
      - GITHOUND_WEB_HOST=0.0.0.0
      - GITHOUND_WEB_PORT=8000
      - GITHOUND_LOG_LEVEL=info
    volumes:
      - githound_data:/app/data
      - githound_logs:/app/logs
      - githound_cache:/app/cache
      - ./repositories:/app/repositories:ro  # Mount repositories for analysis
    depends_on:
      - redis
    networks:
      - githound-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["uvicorn", "githound.web.api:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"]

  # GitHound MCP Server Service
  githound-mcp:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        GITHOUND_VERSION: "0.1.0"
        BUILD_DATE: "${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}"
        VCS_REF: "${VCS_REF:-$(git rev-parse --short HEAD)}"
    container_name: githound-mcp
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - GITHOUND_DATA_DIR=/app/data
      - GITHOUND_LOG_DIR=/app/logs
      - GITHOUND_CACHE_DIR=/app/cache
      - REDIS_URL=redis://redis:6379/1
      - GITHOUND_MCP_HOST=0.0.0.0
      - GITHOUND_MCP_PORT=3000
      - GITHOUND_LOG_LEVEL=info
    volumes:
      - githound_data:/app/data
      - githound_logs:/app/logs
      - githound_cache:/app/cache
      - ./repositories:/app/repositories:ro  # Mount repositories for analysis
    depends_on:
      - redis
    networks:
      - githound-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["python", "-m", "githound.mcp_server", "--host", "0.0.0.0", "--port", "3000"]

  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: githound-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - githound-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: githound-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - githound-web
      - githound-mcp
    networks:
      - githound-network
    profiles:
      - production

volumes:
  githound_data:
    driver: local
  githound_logs:
    driver: local
  githound_cache:
    driver: local
  redis_data:
    driver: local

networks:
  githound-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
